name: Build Manager

on:
  push:
    tags: [ "*" ]
    branches: [ "main" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
      - 'gradle/wrapper/**'
      - 'gradle.properties'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
      - 'gradle/wrapper/**'
      - 'gradle.properties'
  workflow_call:
  workflow_dispatch:

jobs:
  build-manager:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      # 👇 代理变量：用于在 if 条件中判断 secret 是否“存在”
      HAS_SIGNING_KEY: ${{ secrets.SIGNING_KEY || 'missing' }}
      HAS_BOT_TOKEN: ${{ secrets.BOT_TOKEN || 'missing' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: parse_version
        run: |
          COMMIT_NUM=$(git rev-list --count HEAD)
          VERSION=$((COMMIT_NUM + 10200))
          echo "Generated Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 5.6.4

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v6
        with:
          version: 1.12.1

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'platforms;android-29 build-tools;29.0.2'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Configure Gradle properties
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          [ -f gradle.properties ] && sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties || true

      - name: Build with Gradle
        run: ./gradlew clean assembleRelease

      - name: Sign Release
        # ✅ 用 env 代理判断
        if: ${{ env.HAS_SIGNING_KEY != 'missing' }}
        id: sign_app
        uses: kevin-david/zipalign-sign-android-release@v2
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          zipAlign: true

      - name: Upload build artifact
        # ✅ 双重判断：secret 存在 + 输出文件存在
        if: ${{ env.HAS_SIGNING_KEY != 'missing' && steps.sign_app.outputs.signedReleaseFile != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: APatch
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      - name: Post to Telegram channels
        # ✅ 用 env 代理判断 BOT_TOKEN，同时避免 + 拼接
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && github.ref_type != 'tag' && env.HAS_BOT_TOKEN != 'missing' }}
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          # ✅ 用 format() 替代 + 拼接
          COMMIT_URL: ${{ github.event.head_commit.url || format('{0}/{1}/actions/runs/{2}', github.server_url, github.repository, github.run_id) }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message || 'Manual/Workflow Dispatch Build' }}
          COMMIT_ID: ${{ github.sha }}
        run: |
          SIGNED_FILE="${{ steps.sign_app.outputs.signedReleaseFile }}"
          if [ -z "$SIGNED_FILE" ] || [ ! -f "$SIGNED_FILE" ]; then
            echo "No signed APK found, skipping Telegram post."
            exit 0
          fi

          CHANNELS="${{ secrets.TELEGRAM_CHANNEL_IDS || '-1002058433411 -1001910818234' }}"
          for CHAT_ID in $CHANNELS; do
            URL=$(python3 .github/scripts/telegram_url.py "$CHAT_ID")
            echo "Posting to $CHAT_ID..."
            curl -v "$URL" -F "Release=@$SIGNED_FILE"
          done

      - name: Release APK
        # ✅ 用 env 代理判断
        if: ${{ env.HAS_SIGNING_KEY != 'missing' && github.ref_type == 'tag' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_type == 'tag' && github.ref_name || steps.parse_version.outputs.VERSION }}
          artifacts: ${{ steps.sign_app.outputs.signedReleaseFile }}
          generateReleaseNotes: true
          makeLatest: true
          replacesArtifacts: true

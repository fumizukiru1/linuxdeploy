name: Linux Deploy Build

# 触发条件：推送到 main 分支或创建 Pull Request 时
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置 Java 环境
        uses: actions/setup-java@v4
        with:
          java-version: '11'  # 兼容 Gradle 3.6.1
          distribution: 'temurin'
          cache: gradle  # 缓存 Gradle 依赖

      - name: 安装 Android SDK 和构建工具
        uses: android-actions/setup-android@v3
        with:
          # 对应 app/build.gradle 中的 compileSdkVersion 和 buildToolsVersion
          sdk-version: 29
          build-tools-version: 29.0.2
          # 安装 NDK（用于构建原生组件）
          ndk-version: 21.4.7075529  # 兼容 ndk-build

      - name: 构建原生组件（pkgdetails）
        run: |
          # 进入 pkgdetails 目录执行 ndk-build
          cd contrib/pkgdetails
          ndk-build
          # 将构建产物复制到 assets 目录
          mkdir -p ../../app/src/main/assets/bin/arm/
          mkdir -p ../../app/src/main/assets/bin/intel/
          mv libs/armeabi/pkgdetails ../../app/src/main/assets/bin/arm/
          mv libs/x86/pkgdetails ../../app/src/main/assets/bin/intel/

      - name: 赋予 Gradle 执行权限
        run: chmod +x gradlew

      - name: 构建 Release 版本 APK
        run: ./gradlew assembleRelease
        env:
          # 若需要签名，添加签名信息（存储在 GitHub Secrets 中）
          # KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
          # KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          # KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          # KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: 上传构建产物（APK）
        uses: actions/upload-artifact@v4
        with:
          name: linuxdeploy-apk
          path: app/build/outputs/apk/release/*.apk
